# vim: ft=sh

########
# Random
########
alias v=nvim
alias cat='bat --style=plain'
alias vs='v -c "SessionManager load_last_session"'
alias vf='v $(fzf)'
alias cf='cat $(fzf)'
alias bf='bat $(fzf)'
alias rf='rm -rf'
alias curlg='curl -sSL -o /dev/null -D -'
alias ss-mac='lsof -nP -iTCP -sTCP:LISTEN'
alias dud='du -h -d 1 | sort -h'
curlt() {
    curl -w @- -o /dev/null -s "$@" <<'EOF'
    time_namelookup:  %{time_namelookup}\n
       time_connect:  %{time_connect}\n
    time_appconnect:  %{time_appconnect}\n
   time_pretransfer:  %{time_pretransfer}\n
      time_redirect:  %{time_redirect}\n
 time_starttransfer:  %{time_starttransfer}\n
                    ----------\n
         time_total:  %{time_total}\n
EOF
}
ff() { find . -type f -wholename "*$1*" }
fd() { find . -type d -wholename "*$1*" }
b64() { echo -n "$1" | base64 }
b64d() { echo -e "$1" | base64 -d }

#####
# Git
#####
alias g='git'
alias ga='git add'
alias gp='git push origin "$(git rev-parse --abbrev-ref HEAD)"'
alias gs='git status'
alias gd='git diff'
alias gl='git log'
alias gr='git restore'
alias gpull='git pull --no-ff origin "$(git rev-parse --abbrev-ref HEAD)" --no-edit'

#####
# AWS
#####
alias asa='export AWS_REGION=sa-east-1 AWS_DEFAULT_REGION=sa-east-1'
alias aus='export AWS_REGION=us-east-1 AWS_DEFAULT_REGION=us-east-1'
alias ssoenv='eval "$(aws configure export-credentials --profile $AWS_PROFILE --format env)"'
alias aid='aws sts get-caller-identity'
alias ssm='aws ssm start-session --target'
ssmt() {
  if [ "$#" -eq 3 ]; then
    aws ssm start-session --target "$1" \
      --document-name AWS-StartPortForwardingSession \
      --parameters '{"portNumber":["'$2'"],"localPortNumber":["'$3'"]}'
  elif [ "$#" -eq 4 ]; then
    aws ssm start-session --target "$1" \
      --document-name AWS-StartPortForwardingSessionToRemoteHost \
      --parameters '{"host":["'"$2"'"], "portNumber":["'$3'"], "localPortNumber":["'$4'"]}'
  fi
}
adi() { aws ec2 describe-instances --filters "Name=instance-state-name,Values=running" "Name=tag:Name,Values=*$1*" --query "Reservations[*].Instances[*].{id: InstanceId, name: Tags[?Key=='Name'] | [0].Value, env: Tags[?Key=='Environment'] | [0].Value, ip: PrivateIpAddress, squad: Tags[?Key=='Squad'] | [0].Value}" --output table }
adm() { aws sts decode-authorization-message --encoded-message "$1" }
alias al='aws sso login --sso-session '

#########
# Kubectl
#########
alias k=kubectl
alias kg='kubectl get'
alias kd='kubectl describe'
alias kdel='kubectl delete'
alias kl='kubectl logs -f'
alias ke='kubectl edit'
alias kx='kubectl exec -it'
alias kga='kubectl get ing,all,configmap,role,rolebinding,secret'
alias kgp='kubectl get po'
alias kgd='kubectl get deploy'
alias kgi='kubectl get ing'
alias kgs='kubectl get svc'
alias kgm='kubectl get configmap'
alias kgn='kubectl get node'
alias kgj='kubectl get job'

alias kdp='kubectl describe po'
alias kdn='kubectl describe node'
alias kdd='kubectl describe deploy'
alias kds='kubectl describe svc'
alias kdi='kubectl describe ing'
alias kdm='kubectl describe configmap'
alias kdj='kubectl describe job'

alias kep='kubectl edit po'
alias ked='kubectl edit deploy'
alias kes='kubectl edit svc'
alias kei='kubectl edit ing'
alias kem='kubectl edit configmap'
alias kej='kubectl edit job'

alias kdelp='kubectl delete po'
alias kdeld='kubectl delete deploy'
alias kdels='kubectl delete svc'
alias kdeli='kubectl delete ing'
alias kdelm='kubectl delete configmap'
alias kdelj='kubectl delete job'

alias kaf='kubectl apply -f'
alias kdf='kubectl delete -f'

alias kgaa='kubectl get all,ing,clusterrole,clusterrolebinding,secret,configmap,crd -A'
alias kgap='kubectl get po -A'

alias kcu='aws eks update-kubeconfig --name'
alias kcn='kubectl config set-context --current --namespace'
alias kcc='kubectl config use-context'
kpip() { kubectl get pod -o jsonpath='{range .items[*]}{@.metadata.name}{" "}{@.status.podIP}{"\n"}{end}' "$@" | column -t }

########
# Docker
########
alias dps='docker ps -a'
alias dps='docker ps -a'
alias dis='docker image ls'
alias dcc='docker rm $(docker ps --filter status=exited -q)'
alias dci='docker rmi $(docker images -f "dangling=true" -q)'

###########
# Terraform
###########
export TENV_AUTO_INSTALL=true
alias tf='terraform'
alias tf='tofu'
alias tfi='tf init'
alias tfv='tf validate'
alias tfp='tf plan'
alias tfa='tf apply'
alias tfd='tf destroy'
alias tfo='tf output'
alias tfr='tf refresh'
alias tfs='tf state'
alias tfw='tf workspace'
alias tg='terragrunt'
alias tgv='tg validate'
alias tgva='tgv --all'
alias tgp='tg plan'
alias tgpa='tgp --all'
alias tga='tg apply'
alias tgaa='tga --all'
alias tgd='tg destroy'
alias tgda='tgd --all'

#########
# Ansible
#########
alias ai='ansible-inventory'
alias ap='ansible-playbook'

############
# wsl-vpnkit
############
export VMEXEC_PATH=/etc/wsl-vpn-kit/wsl-vm
export GVPROXY_PATH=/etc/wsl-vpn-kit/wsl-gvproxy.exe
