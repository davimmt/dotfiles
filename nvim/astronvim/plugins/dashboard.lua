local icons = {
	{
		"             ███",
		"           ███████",
		"             ███",
		"             ███",
		"  ██         ███         ██",
		"█████████████████████████████",
		"  ██         ███         ██",
		"             ███",
		"             ███",
		"             ███",
		"             ███",
		"             ███",
		"             ███",
		"             ███",
		"             ███",
		"             ███",
		"           ███████",
		"             ███",
	},

	{
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣶⣿⣿⣶⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣶⣾⣿⡏⢹⣿⣷⣶⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⡏⠉⠁⠈⠉⢹⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠻⢿⣿⡇⢸⣿⡿⠟⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⡇⢸⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⢀⣾⣿⣿⣷⡄⠀⠀⠀⠀⢸⣿⡇⢸⣿⡇⠀⠀⠀⠀⢠⣾⣿⣿⣷⡀⠀⠀",
		"⢠⣴⣾⣿⡏⢹⣿⣷⣶⣶⣶⣶⣾⣿⡇⢸⣿⣷⣶⣶⣶⣶⣾⣿⡏⢹⣿⣷⣦⡄",
		"⣿⣿⣏⣀⡀⢀⣀⣀⣀⣀⣀⣀⣀⣀⡀⢀⣀⣀⣀⣀⣀⣀⣀⣀⡀⢀⣀⣹⣿⣿",
		"⠙⠿⢿⣿⣇⣸⣿⡿⠿⠿⠿⠿⢿⣿⡇⢸⣿⡿⠿⠿⠿⠿⢿⣿⣇⣸⣿⡿⠿⠋",
		"⠀⠀⠘⠿⣿⣿⠿⠃⠀⠀⠀⠀⢸⣿⡇⢸⣿⡇⠀⠀⠀⠀⠘⠿⣿⣿⠿⠃⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⡇⢸⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⡇⢸⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⡇⢸⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⡇⢸⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⡇⢸⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⡇⢸⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣴⣾⣿⡇⢸⣿⣷⣦⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣇⣀⡀⢀⣀⣸⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠿⢿⣿⣇⣸⣿⡿⠿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠿⣿⣿⠿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
	},

	{
		"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
		"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠋⣤⣤⠙⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
		"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡏⣠⣶⣿⣿⣷⣦⠙⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
		"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⡘⢻⡿⢻⣿⠋⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
		"⣿⣿⣿⡟⢉⣤⡉⠛⢻⣿⠛⠃⣸⡇⢸⣿⠀⠛⠛⠛⠛⢉⣤⡉⢻⣿⣿⣿",
		"⣿⣿⢁⣤⣾⣿⣿⠿⠿⠿⠿⠿⠿⠇⠸⠿⠿⠿⠿⠿⠿⣿⣿⣿⣦⡈⢻⣿",
		"⣿⣿⣀⠛⢿⣿⣿⣷⣶⣶⣶⣶⣶⡆⢰⣶⣶⣶⣶⣶⣶⣿⣿⣿⠛⢁⣾⣿",
		"⣿⣿⣿⣷⣈⣛⣁⣴⣶⣶⣶⡄⢸⡇⢸⣿⠀⣶⣶⣶⣦⣈⣛⣁⣼⣿⣿⣿",
		"⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠛⠃⣸⡇⢸⣿⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
		"⣿⣿⣿⣿⣿⣿⣿⣿⠁⣴⣿⣿⣿⡇⢸⣿⠀⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
		"⣿⣿⣿⣿⣿⣿⣿⣿⡄⠻⢿⣧⣄⡁⠘⠿⣶⣤⣈⠻⣿⣿⣿⣿⣿⣿⣿⣿",
		"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣦⡄⢹⡇⢸⣶⣼⣿⣿⠀⣿⣿⣿⣿⣿⣿⣿⣿",
		"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣿⡇⢸⣿⠉⣉⣡⣼⣿⣿⣿⣿⣿⣿⣿⣿",
		"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⢁⣼⣧⣼⣿⡀⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
		"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣇⠹⢿⣿⣿⡿⠟⢠⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
		"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣄⠛⠛⢀⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
		"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
	},

	{
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⠛⠛⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⢰⠟⠉⠀⠀⠈⠙⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠘⢧⡄⢀⡄⠀⣴⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⢠⡶⠛⢶⣤⡄⠀⣤⣼⠇⢸⡇⠀⣿⣤⣤⣤⣤⡶⠛⢶⡄⠀⠀",
		"⡾⠛⠁⠀⠀⣀⣀⣀⣀⣀⣀⣸⣇⣀⣀⣀⣀⣀⣀⠀⠀⠀⠙⢷⡄",
		"⠿⣤⡀⠀⠀⠈⠉⠉⠉⠉⠉⢹⡏⠉⠉⠉⠉⠉⠉⠀⠀⠀⣤⡾⠁",
		"⠀⠈⠷⠤⠾⠋⠉⠉⠉⢻⡇⢸⡇⠀⣿⠉⠉⠉⠙⠷⠤⠾⠃⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⣀⣤⣼⠇⢸⡇⠀⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⣾⠋⠀⠀⠀⢸⡇⠀⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⢻⣄⡀⠘⠻⢾⣧⣀⠉⠛⠷⣄⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠈⠙⢻⡆⢸⡇⠉⠃⠀⠀⣿⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⢸⡇⠀⣶⠶⠞⠃⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⢠⡾⠃⠘⠃⠀⢿⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠸⣆⡀⠀⠀⢀⣠⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣤⣤⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
	},

	{
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣿⣿⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⢰⣶⣶⣾⣿⣿⣷⣶⣶⡆⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠘⠛⠛⢻⣿⣿⡟⠛⠛⠃⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇",
		"⠘⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⢻⣿⣿⡟⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠃",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⢠⣶⣤⡀⢸⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠛⢿⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⢿⣿⣿⣿⣦⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⡿⣿⣿⣿⣶⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⡇⠀⠙⠛⠁⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣿⣿⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
	},

	{
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣄⣄⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣤⡤⠀⠀⠀⠀⠀⠀⠀⠀⢦⣦⡶⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⢠⡤⣤⠀⠀⠋⠛⠁⠀⠀⣶⣶⣶⠀⠀⠊⠛⠛⠀⢰⠴⠆⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⢰⣴⢰⣇⣦⠀⠀⢀⣀⣀⣿⣿⣿⣀⣀⡀⠀⢰⣧⡾⣿⣿⣻⣎⡗⠀⠀⠀⠀⠀",
		"⠀⡤⣤⠀⠀⠀⠘⠻⢻⠁⠛⠁⠀⢸⣿⣿⣿⣿⣿⣿⣿⡇⠀⠈⠉⠁⠉⠉⠈⢹⠥⡆⠀⡶⢴⡆",
		"⢰⡃⡶⡾⣿⣄⠀⠀⠈⠀⠀⠀⠀⠈⠉⠉⢹⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣽⣿⣯⡏⣿⡇",
		"⠈⠁⠁⠁⣭⣭⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣼⣿⣿⣤⣤⣤⣤⣤⣤⣤⣤⣤⣬⣭⣭⡄⠁⠀⠀⠀",
		"⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⢀⣀⡀⠀⢸⣿⣿⡇⠀⣀⡀⣀⠀⠀⢀⣀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⢰⣧⠀⠀⣿⢺⣿⣿⠀⢸⣿⣿⡇⠀⡿⣷⣿⡄⠀⣿⣿⠇⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⢿⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⡇⠀⠀⠀⠀⠀⠀⢸⠁⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⢸⡀⠀⠀⠀⠀⠀⠀⢸⣿⣿⡇⠀⠀⠀⠀⠀⠀⣼⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⢸⣿⣿⡇⠀⠀⠀⠀⠀⠀⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⢀⢀⠀⢳⠀⠀⠀⠀⢀⡀⢸⣿⣿⡇⠀⠀⠀⠀⠀⢠⡇⢀⣀⡀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⢨⣭⠄⢸⡄⠀⠀⠀⢸⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⢾⠄⠶⡖⠆⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠈⠿⠆⠀⡇⠀⠀⠀⠈⠛⢿⣿⣿⣷⣦⡀⠀⠀⠀⡿⠀⠀⠗⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢳⠀⠀⠀⠀⠀⢸⣿⣿⡿⣿⡇⠀⠀⢠⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡀⠀⢠⢤⡄⢸⣿⣿⡇⢠⣥⡄⠀⢸⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⣧⠀⣴⣶⡆⢸⣿⣿⡇⢠⢿⠀⠀⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢳⠀⠣⡧⡇⢸⣿⣿⡇⢸⣿⡇⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡆⠀⣾⡀⢸⣿⣿⡇⢸⣿⠀⢸⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣇⠀⡏⠀⢸⣿⣿⡇⠈⠙⠀⣸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣼⣤⣥⣤⣼⣿⣿⣧⣤⣤⣤⣯⡄⠀⠀⠀⣀⡀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⢛⣛⠀⠀⠀⣸⣿⣿⡇⠀⣠⡴⠶⣤⠀⠀⣿⣿⣇⣀⣀⠀⣭⡏⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠸⠀⠀⢸⣿⣿⢉⣉⣠⣴⡏⣤⣰⢿⣶⠆⣉⣉⣿⣿⣿⠀⠿⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⠉⠉⢠⡴⠀⢽⡿⠷⣼⣿⡿⠇⣹⡏⠉⠉⢹⣿⣿⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠘⠛⠛⠀⠀⠘⠃⠀⠀⠀⠀⠈⠁⠀⠀⠛⠓⠀⠀⠘⠛⠛⠀⠀⠀⠀⠀⠀⠀",
	},

	{
		"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⠻⠻⣿⣿⣿⣿⣿⣿⣿⣿⡿⠿⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
		"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠛⢛⣿⣿⣿⣿⣿⣿⣿⣿⡙⠙⢉⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
		"⣿⣿⣿⣿⣿⣿⡟⢛⠛⣿⣿⣴⣤⣾⣿⣿⠉⠉⠉⣿⣿⣵⣤⣤⣿⡏⣋⣹⣿⣿⣿⣿⣿⣿⣿⣿",
		"⣿⣿⣿⣿⣿⣿⡏⠋⡏⠸⠙⣿⣿⡿⠿⠿⠀⠀⠀⠿⠿⢿⣿⡏⠘⢁⠀⠀⠄⠱⢨⣿⣿⣿⣿⣿",
		"⣿⢛⠛⣿⣿⣿⣧⣄⡄⣾⣤⣾⣿⡇⠀⠀⠀⠀⠀⠀⠀⢸⣿⣷⣶⣾⣶⣶⣷⡆⣚⢹⣿⢉⡋⢹",
		"⡏⢼⢉⢁⠀⠻⣿⣿⣷⣿⣿⣿⣿⣷⣶⣶⡆⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠂⠀⠐⢰⠀⢸",
		"⣷⣾⣾⣾⠒⠒⠛⠛⠛⠛⠛⠛⠛⠛⠛⠛⠃⠀⠀⠛⠛⠛⠛⠛⠛⠛⠛⠛⠓⠒⠒⢻⣾⣿⣿⣿",
		"⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿",
		"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⡿⠿⢿⣿⡇⠀⠀⢸⣿⠿⢿⠿⣿⣿⡿⠿⣿⣿⣿⣿⣿⣿⣿⣿",
		"⣿⣿⣿⣿⣿⣿⣿⡏⠘⣿⣿⠀⡅⠀⠀⣿⡇⠀⠀⢸⣿⢀⠈⠀⢻⣿⠀⠀⣸⣿⣿⣿⣿⣿⣿⣿",
		"⣿⣿⣿⣿⣿⣿⣿⣿⡀⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀⢸⣿⣿⣿⣿⣿⣿⡇⣾⣿⣿⣿⣿⣿⣿⣿⣿",
		"⣿⣿⣿⣿⣿⣿⣿⣿⡇⢿⣿⣿⣿⣿⣿⣿⡇⠀⠀⢸⣿⣿⣿⣿⣿⣿⠃⣿⣿⣿⣿⣿⣿⣿⣿⣿",
		"⣿⣿⣿⣿⣿⣿⣿⣿⣿⢸⣿⣿⣿⣿⣿⣿⡇⠀⠀⢸⣿⣿⣿⣿⣿⣿⢰⣿⣿⣿⣿⣿⣿⣿⣿⣿",
		"⣿⣿⣿⣿⣿⣿⡿⡿⣿⡌⣿⣿⣿⣿⡿⢿⡇⠀⠀⢸⣿⣿⣿⣿⣿⡟⢸⡿⠿⢿⣿⣿⣿⣿⣿⣿",
		"⣿⣿⣿⣿⣿⣿⡗⠒⣻⡇⢻⣿⣿⣿⡇⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⡁⣻⣉⢩⣹⣿⣿⣿⣿⣿⣿",
		"⣿⣿⣿⣿⣿⣿⣷⣀⣹⣿⢸⣿⣿⣿⣷⣤⡀⠀⠀⠈⠙⢿⣿⣿⣿⢀⣿⣿⣨⣿⣿⣿⣿⣿⣿⣿",
		"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡌⣿⣿⣿⣿⣿⡇⠀⠀⢀⠀⢸⣿⣿⡟⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
		"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⢿⣿⡟⡛⢻⡇⠀⠀⢸⡟⠚⢻⣿⡇⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
		"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣟⠘⣿⠋⠉⢹⡇⠀⠀⢸⡟⡀⣿⣿⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
		"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡌⣿⣜⢘⢸⡇⠀⠀⢸⡇⠀⢸⣿⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
		"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⢹⣿⠁⢿⡇⠀⠀⢸⡇⠀⣿⡇⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
		"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠸⣿⢰⣿⡇⠀⠀⢸⣷⣦⣿⠇⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
		"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⠃⠛⠚⠛⠃⠀⠀⠘⠛⠛⠛⠐⢻⣿⣿⣿⠿⢿⣿⣿⣿⣿⣿⣿",
		"⣿⣿⣿⣿⣿⣿⡤⠤⣿⣿⣿⠇⠀⠀⢸⣿⠟⢋⣉⠛⣿⣿⠀⠀⠸⠿⠿⣿⠒⢰⣿⣿⣿⣿⣿⣿",
		"⣿⣿⣿⣿⣿⣿⣇⣿⣿⡇⠀⠀⡶⠶⠟⠋⢰⠛⠏⡀⠉⣹⠶⠶⠀⠀⠀⣿⣀⣿⣿⣿⣿⣿⣿⣿",
		"⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀⣶⣶⡟⢋⣿⡂⢀⣈⠃⠀⢀⣸⠆⢰⣶⣶⡆⠀⠀⣿⣿⣿⣿⣿⣿⣿",
		"⣿⣿⣿⣿⣿⣿⣿⣧⣤⣤⣿⣿⣧⣼⣿⣿⣿⣿⣷⣾⣿⣿⣤⣬⣿⣿⣧⣤⣤⣿⣿⣿⣿⣿⣿⣿",
	},

	{
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⣀⣀⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣤⠶⠞⠛⠈⠉⠉⠉⠉⠉⠉⠁⠛⠳⠶⣤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⣠⡴⠟⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠳⢦⣄⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⣠⡾⠋⠀⢀⣀⠀⢀⠀⠀⠀⢤⣤⣤⣤⣤⡄⠀⠀⠀⢀⣀⠀⡀⠀⠙⢷⣄⠀⠀⠀⠀⠀",
		"⠀⠀⠀⢀⡾⠋⠀⠀⠀⠉⠈⠛⠉⠀⠀⠀⢸⣿⣿⣿⣿⠇⠀⠀⠀⠋⠈⠛⠁⠀⠀⠀⠙⢷⡀⠀⠀⠀",
		"⠀⠀⢠⡟⠁⠀⠀⠀⠘⣿⣰⡟⢹⣦⠀⠀⠀⣿⣿⣿⣿⠀⠀⠙⣧⣼⠋⣼⠛⣷⠀⠀⠀⠈⢷⡄⠀⠀",
		"⠀⢠⡟⠀⠀⠀⠀⠀⠈⣿⣿⡇⠀⠁⠀⠀⠀⢿⣿⣿⡟⠀⠀⠀⢹⣇⠀⣿⠀⠀⠀⠀⠀⠀⠈⢿⡄⠀",
		"⠀⣾⠁⠀⠀⠀⠀⠀⠀⣿⠘⢷⣀⣿⠀⠀⠀⢸⣿⣿⡇⠀⠀⢀⡟⢻⡆⠘⣇⣾⠀⠀⠀⠀⠀⠘⣷⠀",
		"⢠⡆⠀⠀⠀⠀⣄⣀⣘⠛⠀⠘⠛⠁⠀⠀⠀⢸⣿⣿⡇⠀⠀⠛⠁⠈⠛⠀⠘⢁⣀⣠⠀⠀⠀⠀⢠⡀",
		"⢸⡇⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⣿⣶⣶⣶⣶⣾⣿⣿⣷⣶⣶⣶⣶⣶⣾⣿⣿⣿⣿⣿⠀⠀⠀⠀⢸⡇",
		"⢸⡇⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⠿⠿⠿⠿⠿⢿⣿⣿⡿⠿⠿⠿⠿⠿⠿⣿⣿⣿⣿⣿⠀⠀⠀⠀⢸⡇",
		"⠘⠇⠀⠀⠀⠀⠉⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠉⠀⠀⠀⠀⣘⠁",
		"⠀⢿⡀⠀⠀⠀⠀⠀⢸⣿⡀⢻⡏⣿⠀⠀⠀⢸⣿⣿⡇⠀⠀⣿⣼⠛⢸⡟⣻⠁⠀⠀⠀⠀⠀⢠⡟⠀",
		"⠀⠘⣧⡀⠀⠀⠀⠀⢸⣿⠻⣿⡇⣿⠀⠀⠀⣸⣿⣿⡇⠀⠀⣿⣏⠀⢨⡟⢻⠀⠀⠀⠀⠀⢀⣾⠃⠀",
		"⠀⠀⠘⢷⡀⠀⠀⠀⢸⣿⠀⢸⡇⣿⠀⠀⠀⣿⣿⣿⣿⠀⠀⣿⢿⡄⣿⡟⢻⠀⠀⠀⠀⢀⠾⠃⠀⠀",
		"⠀⠀⠀⠈⢷⣄⠀⠀⠘⠛⠀⠘⠓⠛⠀⠀⢰⣿⣿⣿⣿⡄⠀⠛⠈⠛⠚⠃⠘⠂⠀⠀⣠⡟⠁⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠙⢷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠚⠛⠛⠛⠛⠃⠀⠀⠀⠀⠀⠀⠀⠀⣠⡾⠋⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠙⠻⢦⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⡔⠟⠉⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠛⠷⢶⣤⡄⣀⣀⣀⣀⣀⣀⢠⣤⠶⠾⠛⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠉⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
	},

	{
		"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠿⠿⠿⠿⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
		"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠛⣉⣡⣤⣷⣶⣶⣶⣶⣶⣶⣾⣤⣌⣉⠛⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
		"⣿⣿⣿⣿⣿⣿⣿⠟⢋⣠⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣌⡙⠻⣿⣿⣿⣿⣿⣿⣿",
		"⣿⣿⣿⣿⣿⠟⢁⣴⣿⡿⠿⣿⡿⣿⣿⣿⡛⠛⠛⠛⠛⢻⣿⣿⣿⡿⠿⣿⢿⣿⣦⡈⠻⣿⣿⣿⣿⣿",
		"⣿⣿⣿⡿⢁⣴⣿⣿⣿⣶⣷⣤⣶⣿⣿⣿⡇⠀⠀⠀⠀⣸⣿⣿⣿⣴⣷⣤⣾⣿⣿⣿⣦⡈⢿⣿⣿⣿",
		"⣿⣿⡟⢠⣾⣿⣿⣿⣧⠀⠏⢠⡆⠙⣿⣿⣿⠀⠀⠀⠀⣿⣿⣦⠘⠃⣴⠃⣤⠈⣿⣿⣿⣷⡈⢻⣿⣿",
		"⣿⡟⢠⣿⣿⣿⣿⣿⣷⠀⠀⢸⣿⣾⣿⣿⣿⡀⠀⠀⢠⣿⣿⣿⡆⠸⣿⠀⣿⣿⣿⣿⣿⣿⣷⡀⢻⣿",
		"⣿⠁⣾⣿⣿⣿⣿⣿⣿⠀⣧⡈⠿⠀⣿⣿⣿⡇⠀⠀⢸⣿⣿⡿⢠⡄⢹⣧⠸⠁⣿⣿⣿⣿⣿⣧⠈⣿",
		"⡟⢹⣿⣿⣿⣿⠻⠿⠧⣤⣿⣧⣤⣾⣿⣿⣿⡇⠀⠀⢸⣿⣿⣤⣾⣷⣤⣿⣧⡾⠿⠟⣿⣿⣿⣿⡟⢿",
		"⡇⢸⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠉⠉⠉⠉⠁⠀⠀⠈⠉⠉⠉⠉⠉⠁⠀⠀⠀⠀⠀⣿⣿⣿⣿⡇⢸",
		"⡇⢸⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⣀⣀⣀⣀⣀⡀⠀⠀⢀⣀⣀⣀⣀⣀⣀⠀⠀⠀⠀⠀⣿⣿⣿⣿⡇⢸",
		"⣧⣸⣿⣿⣿⣿⣶⣶⣾⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣶⣿⣿⣿⣿⠧⣾",
		"⣿⡀⢿⣿⣿⣿⣿⣿⡇⠀⢿⡄⢰⠀⣿⣿⣿⡇⠀⠀⢸⣿⣿⠀⠃⣤⡇⢠⠄⣾⣿⣿⣿⣿⣿⡟⢠⣿",
		"⣿⣧⠘⢿⣿⣿⣿⣿⡇⠀⣄⠀⢸⠀⣿⣿⣿⠇⠀⠀⢸⣿⣿⠀⠰⣿⡗⢠⡄⣿⣿⣿⣿⣿⡿⠁⣼⣿",
		"⣿⣿⣧⡈⢿⣿⣿⣿⡇⠀⣿⡇⢸⠀⣿⣿⣿⠀⠀⠀⠀⣿⣿⠀⡀⢻⠀⢠⡄⣿⣿⣿⣿⡿⣁⣼⣿⣿",
		"⣿⣿⣿⣷⡈⠻⣿⣿⣧⣤⣿⣧⣬⣤⣿⣿⡏⠀⠀⠀⠀⢻⣿⣤⣷⣤⣥⣼⣧⣽⣿⣿⠟⢠⣾⣿⣿⣿",
		"⣿⣿⣿⣿⣿⣦⡈⠻⣿⣿⣿⣿⣿⣿⣿⣿⣥⣤⣤⣤⣤⣼⣿⣿⣿⣿⣿⣿⣿⣿⠟⢁⣴⣿⣿⣿⣿⣿",
		"⣿⣿⣿⣿⣿⣿⣿⣦⣄⡙⠻⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠟⢫⣠⣶⣿⣿⣿⣿⣿⣿⣿",
		"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣤⣈⡉⠛⢻⠿⠿⠿⠿⠿⠿⡟⠛⣉⣁⣤⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
		"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣶⣶⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
	},

	{
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠔⠀⣀⣀⡈⠢⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠆⣤⣤⣀⣿⣿⣀⣠⣤⠘⠆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣆⠈⠛⠛⢿⣿⠻⠟⠁⣠⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⣆⠀⠙⢛⠀⢠⠚⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠤⡀⠀⠀⠀⠀⠀⠸⠀⣿⣿⡀⢨⠀⠀⠀⠀⠀⠀⠀⠀⢀⡀⠀⠀⠀",
		"⠀⠀⠠⠃⠀⠀⣀⡈⠢⠀⠀⠀⠀⠜⢿⣿⣿⣿⠸⠀⠀⠀⠀⠐⠀⠀⠀⢀⠑⢄⠀⠀",
		"⢠⠆⠀⠀⣿⣸⡿⠻⠆⠀⣤⣤⣤⣤⣤⣿⣿⣥⣤⣤⣤⣤⡄⢿⣤⣿⢺⡿⠻⠆⠑⠆",
		"⠈⣗⡀⠀⣿⠸⣧⣶⠆⠀⠛⠛⠛⠛⠛⣿⣿⠟⠛⠛⠛⢛⠃⣾⡛⣷⣸⣧⣤⠄⢠⡎",
		"⠀⠈⠙⣦⠁⠀⠀⢰⣶⠛⠛⠛⠲⢦⠀⣿⣿⡄⠀⠒⠒⠒⠛⠻⣆⠉⠀⠉⢉⠞⠋⠀",
		"⠀⠀⠀⠈⠳⠶⠞⠛⠁⠀⠀⠀⠀⢸⠀⣿⣿⠀⠀⠀⠀⠀⠀⠀⠻⠦⠤⠤⠋⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⢀⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠸⣿⣿⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠨⠀⣿⣿⠛⠃⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠀⠀⠀⣿⣿⠄⠀⠈⠱⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡯⢠⡄⠀⠙⠛⠀⠀⣠⡄⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⡁⢈⣿⣦⢠⣤⢠⣾⣟⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢡⠛⢋⣵⣿⣿⣷⣭⠛⠇⡞⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡰⣿⡿⢋⣾⡻⣿⣿⢀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⣿⣺⢿⣿⣷⠌⡡⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠿⣿⣿⣴⡾⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
	},

	{
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⣤⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⠋⠉⠉⠉⠻⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡸⠃⠠⡶⠶⡆⠀⠑⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡞⢡⣦⣤⣀⣧⣴⣁⣠⣤⣶⠙⢆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢾⠀⠈⠫⠽⠿⡥⠸⡭⠯⠥⠋⠀⣸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢦⣀⡀⠀⠀⣅⠈⡇⠀⠀⢀⣴⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠛⢿⡀⠀⣈⣊⡀⠀⢰⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇⠀⡏⠉⡇⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⡤⠚⠉⠉⠑⢤⠀⠀⠀⠀⠀⠀⢸⢰⠖⠃⠀⠛⢻⣾⠀⠀⠀⠀⠀⠀⡠⠊⠁⠀⠀⠙⣄⠀⠀⠀",
		"⠀⠀⢀⣜⣥⣤⠀⣠⣤⣠⡑⠒⠒⠒⠒⠒⠊⠈⠚⣶⣤⡖⠋⠁⠁⠒⠒⠒⠒⢊⣥⣄⣤⢀⣤⣤⣜⠦⣀⠀",
		"⠀⡴⠁⠈⡇⡎⣼⣹⠛⠛⠁⠀⣤⣶⢶⣶⣶⣶⣶⡏⠙⣷⣶⣶⣶⣶⣶⣦⠀⠈⢿⠻⡟⡟⢽⠙⠛⠀⠈⢃",
		"⠰⣇⠀⢀⡇⣇⢳⢻⣀⣶⠄⠀⠛⠤⠤⠤⠤⠼⠼⡅⠀⡧⠥⠵⠤⠔⠤⠛⠀⢰⢿⠻⡙⣇⢸⣴⡶⠀⢀⡎",
		"⠀⠻⢧⣌⡛⠋⠀⠑⠛⠋⣠⣤⠶⣶⣤⣤⣤⡀⠀⡏⠀⡇⠀⣠⡶⠶⠶⠶⠶⢾⣍⠀⠉⠉⠉⠉⣠⣶⠟⠁",
		"⠀⠀⠀⠉⢿⣤⣀⣀⣀⣴⠛⠀⠀⠀⠀⠀⠀⡇⠀⡇⠀⡇⠀⡟⠀⠀⠀⠀⠀⠀⠻⣷⣦⣤⣤⣾⠛⠁⠀⠀",
		"⠀⠀⠀⠀⠀⠙⠛⠛⠟⠁⠀⠀⠀⠀⠀⠀⠀⡇⠀⡇⠀⡇⠀⡇⠀⠀⠀⠀⠀⠀⠀⠈⠉⠉⠉⠁⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⣀⡏⠀⡇⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡉⠃⠀⣇⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠉⡆⠀⠉⢳⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠇⠀⡇⠀⡗⠚⢡⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠃⠀⠀⡇⠀⡇⠀⠀⢱⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⠀⠀⠀⡇⠀⡇⠀⠀⢠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡼⢖⣦⣀⠙⠒⠁⣠⣶⡎⠆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠃⠀⢙⣿⣇⣀⢾⣿⡁⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣧⠾⠟⣫⡞⡌⢳⣙⠽⢧⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⡇⡟⠁⣰⡳⡆⠙⡇⡞⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣧⠳⢜⡝⠙⢎⠢⢣⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⣷⡜⡄⠀⠜⣴⠟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢻⡘⠼⢰⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⠶⠛⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
	},
	{
		"⣿⣿⣿⣿⡿⠿⠟⠿⠿⠿⠭⠩⠽⠿⠟⠭⠏⠟⠙⠹⠫⡉⠉⠉⠉⠉⠉⠉⠿⠿⠟⠏⠉⣿⣿⣿",
		"⣿⣿⣿⣿⠀⠀⠀⠀⢀⣀⠼⡛⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠻⣧⣠⠀⠀⠀⠀⠀⠀⣿⣿⣿",
		"⣿⣿⣿⣿⠀⠀⠊⡴⠟⠁⠀⠀⠀⠀⢀⣀⣀⣀⠀⣀⠀⠀⠀⠀⠀⠀⠙⣿⣆⡀⠀⠀⠀⣿⣿⣿",
		"⣿⣿⣿⣿⠐⢀⡷⠃⠀⠀⠀⢀⣤⣾⣿⣿⣿⡿⣿⣿⣿⣶⣄⠀⠀⠀⠀⠈⢿⣧⠀⠀⠀⣿⣿⣿",
		"⣿⣿⣿⣇⠀⣼⠁⠀⠀⠀⢠⣿⣿⣿⣿⡿⠻⢿⣾⣿⣿⣿⣿⣧⠀⠀⠀⠀⠀⠿⡅⠀⠀⣿⣿⣿",
		"⣿⣿⣿⡏⣸⡇⠀⠀⠀⢀⣿⣿⣿⠟⠁⠀⠀⠀⠀⠻⣿⣿⣿⣿⣧⠀⠀⠀⠀⠈⣷⠀⠀⣿⣿⣿",
		"⣿⣿⣿⡇⣿⡇⠀⠀⠀⣸⣿⣿⠃⢤⢶⠄⠀⣤⠖⠒⢜⣿⣿⣿⣿⡆⠀⠀⠀⠀⣿⠀⠀⣿⣿⣿",
		"⣿⣿⣿⣇⣿⡇⠀⠀⠀⢿⣿⣿⠀⠋⠋⠁⢰⠛⠛⠑⠀⢹⣿⣿⣿⡇⠀⠀⠀⠀⣿⠀⠐⣿⣿⣿",
		"⣿⣿⣿⡇⠸⣧⠀⠀⠀⢸⣿⣟⣄⠀⠀⠀⢀⡄⠀⢀⣼⣫⣿⣿⣿⠃⠀⠀⠀⣰⡇⠀⠐⣿⣿⣿",
		"⣿⣿⣿⡇⠀⢹⡇⠀⠀⠀⢿⣿⣻⠀⡰⠛⣛⢷⠄⢺⣿⣿⣿⣿⡏⠀⠀⠀⢠⡿⠅⠀⡈⣿⣿⣿",
		"⣿⣿⣿⡏⢠⡈⣿⣂⣄⠀⠈⠻⣿⣇⠀⠀⠛⠁⢈⣼⣿⣿⣿⣿⠂⠀⠀⢠⡾⠁⠂⠄⠉⣿⣿⣿",
		"⣿⣿⣿⠋⣉⢉⡌⡈⡊⠀⢀⣴⣿⠙⣷⣶⣶⣾⣿⠟⢹⣿⣿⣿⣦⣄⠴⡋⠇⠀⠀⠀⠠⣿⣿⣿",
		"⣿⣿⣿⠃⡃⡄⠠⠆⢈⣴⣿⡿⠋⠀⠀⠙⠛⠛⠛⠀⢰⣿⣿⣿⣿⣿⣿⣶⣦⣄⡀⢰⣶⣿⣿⣿",
		"⣿⣿⣿⠠⠇⠀⣀⣤⣾⣿⣋⠀⠀⠀⠀⠀⠀⠀⠀⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣯⣿⣿⣿",
		"⣿⣿⣿⣠⣮⣟⣿⣿⣿⣿⣿⣿⣦⣀⡀⠀⠀⢀⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
		"⣿⣿⣿⣿⣿⣿⣿⣿⡿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠿⠿⣿⣿⣿⣿",
		"⣿⣿⣿⣿⣿⣿⣿⣿⣯⡘⢿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠻⠉⣉⣍⣭⠀⣀⡄⢀⣤⣤⣦⢻⣿⣿⣿",
		"⣿⣿⣿⣿⣿⣿⣿⣿⣽⠁⡽⠟⣛⣺⣿⣿⣿⡿⠇⠀⢸⠃⣿⠩⠉⠀⢛⠃⠠⠀⢁⣿⣼⣿⣿⣿",
		"⣿⣿⣿⣿⣿⣿⣿⣿⣿⠺⠔⠾⢿⠿⣿⣿⣿⡇⠀⠁⠠⢀⡿⡀⢀⠀⣿⡴⠔⡊⣼⡷⢼⣿⣿⣿",
		"⣿⣿⣿⣿⣿⣿⣿⣿⡇⠒⠒⢊⣻⣼⣿⣿⣿⠓⡠⠃⠠⠖⣱⠓⢨⣤⣿⣿⣖⣨⣤⡄⣼⣿⣿⣿",
		"⣿⣿⣿⣿⣿⣿⣿⣿⣧⠻⣿⠅⠐⢺⣿⣿⣿⣉⠂⠀⠠⠐⠿⠨⡳⣸⣿⡙⢂⣅⢈⠑⣼⣿⣿⣿",
		"⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⣥⡇⣨⣾⣿⣿⣿⡃⠂⢀⠌⣨⡬⡀⠈⣿⣿⢷⠼⣀⢸⣷⣿⣿⣿⣿",
		"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣾⣿⣿⣿⣿⣟⣃⡀⡠⣶⢹⣇⠈⡁⡚⢛⢓⣒⣺⣼⣿⣿⣿⣿⣿",
	},

	{
		"⣿⣷⣶⣶⣶⣴⣤⣦⣤⣦⣤⣴⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣦⣴⣤⣤⣤⣦⣴⣶⣶⣶⣴⣾⣿",
		"⣿⣿⠀⠀⠀⢀⠤⣀⣤⠀⠀⠀⠀⠀⠀⠀⠀⠀      ⠀⠀⠠⢄⡠⠀⠀⠀⠀⠀⣿⣥",
		"⣿⣿⠀⠀⠀⠠⡄⡠⡄⠀⠀⠀            ⠀⠀⣄⠄⡀⡄⠀⠀⠀⠀⣿⣿",
		"⣽⣿⠀⠀⠀⠰⡇⡇⡁⠀⠀⠀   ⢀⠀⠤⠀⢀    ⠀⠀⠞⡄⡇⠀⠀⠀⠀⠀⣿⣿",
		"⣿⣿⠀⠀⠀⠐⠂⠑⠃⠀⠀⡐          .  ⠈⠀⠉⠈⠁⠀⠀⠀⠀⣿⣿",
		"⣿⡇⠀⠀⠀⠀⠀ ⠀⠀⠀  ⠀⢀⣤⣤⣤⣤⣤⣄⠀⠀⠀⠀⠀⠀⠀⠀⠁⠃⠀⠀⠀⢸⣿",
		"⣿⡇⠀⠀⠀⠀⠀⠀⢀⠀⠀⠀⢀⣴⣿⣿⣿⣿⣿⣿⣿⣷⣄⠀⠀⠈⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿",
		"⣿⡇⠀⠀⠀⠀⠀⠀⠂⠀⠀⠀⣾⣿⡿⠋⠀⠀⠙⢻⣿⣿⣿⡄⠀⠀;⠀⠀⠀⠀⠀⠀⠀⢸⣿",
		"⣿⡇⠀⠀⠀⠀⠀⢸⠀⠍⠀⢸⣿⣿⡷⣶⡦⠴⣶⡶⣿⣿⣿⣷⠀ ⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿",
		"⣿⡇⠀⠀⠀⠀⠀⠈⢀⠀⣀⢸⣿⠿⡀⠀⠀⠇⠀⠀⣸⢽⣿⣿⠀ .⠀⠀⠀⠀⠀⠀⠀⢸⣿",
		"⣿⡇⢠⠀⠀⠀⠀⠀⠁⠀⠀⠀⠻⣷⣿⣤⣶⣿⣤⣻⣿⣿⡟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿",
		"⣿⡇⢀⠛⠘⠛⠋⠃⠀⠠⡀⠀⠀⠹⣿⣿⣷⣾⣿⣿⣿⣿⣟⠀.⠀⠀⠀⠈⠃⠁⠀⠁⠀⢸⣿",
		"⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣴⡞⠉⠻⢿⣿⡻⣽⣿⡿⣦⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿",
		"⣿⡇⠀⠀⠀⠀⠀⠀⠀⢠⣶⣿⣿⠋⠘⠠⠀⡀⠀⠐⣫⣿⣿⢽⣻⣷⣤⡀⠀⠀⠀⠀⠀⠀⢸⣿",
		"⣿⡇⠀⠀⠀⠀⠀⢀⣶⣿⣿⣿⡿⣷⣤⣤⣤⣄⣤⣾⣿⣿⢿⣿⣾⢻⣿⣿⣦⠀⠀⠀⠀⠀⢸⣿",
		"⣿⡇⠀⠀⠀⠀⢠⠿⢁⡏⢻⣷⣿⣯⢿⣳⣿⣾⣿⣿⣿⡟⣿⣽⡟⣿⣽⣿⣿⣧⠀⠀⠀⠀⢸⣿",
		"⣿⡇⠀⠀⠀⠀⣼⣷⣆⠀⠈⢹⣿⣽⣿⣿⣿⣿⣿⣿⣿⣿⣻⡼⣽⣟⣿⣿⣿⣿⡇⠀⠀⠀⢸⣿",
		"⣿⡇⠀⠀⠀⣸⣿⣿⣿⡃⢠⢸⣿⡿⠁⣨⣿⣿⣿⣿⣿⡿⠛⠛⣻⠛⠛⠛⣯⣿⣿⠀⠀⠀⢸⣿",
		"⣿⡇⠀⠀⠀⣿⣿⣿⣿⣳⢈⢼⣿⢁⠾⠿⢛⣿⣿⣿⡟⢰⢂⣈⡀⣤⢀⢀⣿⣷⣿⡀⠀⠀⢸⣿",
		"⣿⡇⠀⠀⢰⣿⣿⣞⣿⣿⣨⣺⡿⠀⢠⡇⢸⣿⣿⣿⡷⠀⠁⢠⠀⠁⢸⠋⣿⡿⣿⡇⠀⠀⢸⣿",
		"⣿⡇⠀⠀⣼⣿⣿⣿⣿⣿⣻⣿⠃⠀⡏⢀⣿⣿⣿⣿⡟⠤⠘⣸⠈⡀⢸⠀⣿⣯⣿⣇⠀⠀⢸⣿",
		"⣿⡇⠀⠠⣿⣿⣿⢿⣻⣿⡿⡍⢆⣼⣥⣾⣿⣿⣿⣿⠏⣉⠀⠀⠦⣤⣼⣂⣿⣿⣿⣿⡀⠀⢸⣿",
		"⣿⡇⠀⢰⣿⣿⣿⣿⣿⣿⢿⣷⣾⣿⣾⢷⣯⣿⣻⣿⣇⡀⠀⠀⡘⣿⢾⣿⡴⢾⣝⣿⡇⠀⢸⣿",
		"⣿⣷⣶⣶⣶⣴⣤⣦⣤⣦⣤⣴⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣤⣦⣴⣤⣤⣤⣦⣴⣶⣶⣶⣴⣾⣿",
	},

	{
		"⡶⠟⠛⠛⠁⠀⣿⡿⢯⣿⣿⣿⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣍⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣶⡯⡖⢿⡇⠀⠀⠀⠙⠿⠍⠹",
		"⣧⡀⠀⠀⠀⢸⣿⣷⣽⣿⣾⣿⣿⣿⣿⡿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣟⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣽⡍⢸⣧⠀⠀⠀⠠⠀⠀⠀",
		"⣿⣿⣦⣤⠤⣾⣏⣿⣿⣿⣿⣿⣿⣿⣿⣷⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⣿⣇⡀⠀⠈⠆⣀⠀",
		"⣿⣿⡿⣿⣿⣿⣿⣿⣿⣿⡿⣟⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⣾⣿⣿⣿⣿⣿⣿⣿⣯⣷⣤⣀⡤⠼⢀",
		"⣿⣿⢻⣿⣿⣿⣿⣿⣿⡟⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣻⠃⠄⠚",
		"⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠘⣿⣿⣿⣿⣿⣿⣿⣿⡏⣿⠟⣫⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣽⣿⣿⡿⠿⠿⠛⠛⠻⠿⠿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣎⡀⢆",
		"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⢠⣿⣿⣿⣿⣿⣿⣿⣿⠑⣿⠀⣥⣍⣛⣻⣿⣿⣿⣿⣿⣿⠿⠛⠉⠀⠀⠀⢀⡴⠀⢦⡀⠀⠀⠀⠉⠛⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣢",
		"⣿⣿⣿⣿⣿⣿⣿⣿⡿⠛⣼⣿⣿⣿⣿⣿⣿⣿⣿⡆⠷⠾⣋⢻⠉⣿⣿⣿⣿⡿⠛⠁⠀⠀⠀⠀⠀⠀⠘⠦⠼⠴⠃⠀⠀⠀⠀⠀⠀⠈⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
		"⣿⣿⣿⣿⣿⣿⡿⠋⣀⣠⢹⣿⣿⣿⣿⣿⣿⣿⣿⡇⠐⡆⢿⠈⠀⣿⣿⣿⠏⠀⠀⠀⠀⠀⠀⢀⣤⣴⣶⣿⣿⣿⣶⣶⣤⡀⠀⠀⠀⠀⠀⠈⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
		"⣿⣿⣿⣿⣿⣿⣵⣾⡟⡁⠈⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⢹⣾⡧⣰⣿⣿⠃⠀⠀⠀⠀⠀⢀⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣄⠀⠀⠀⠀⠀⠙⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
		"⣿⣿⣿⣿⣿⢿⡿⠋⢸⣿⣷⣿⣿⣿⣿⣿⣿⣿⣿⠇⠀⢀⣿⣷⣿⣿⠃⠀⠀⠀⠀⠀⠀⣾⣿⣿⣿⡿⠟⠿⠙⠿⣿⣿⣿⣿⣿⣿⡆⠀⠀⠀⠀⠀⠹⣿⣿⣿⣿⣿⣿⣿⣿⣷⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
		"⣿⣿⣿⣿⣿⣿⡷⡛⣾⣿⠏⣿⣿⣿⣿⣿⣿⡿⠁⠀⢀⣿⣿⣿⣿⡏⠀⠀⠀⠀⠀⠀⣸⣿⣿⣿⠏⠀⠀⠀⠀⠀⠀⠙⢿⣿⣿⣿⣿⡀⠀⠀⠀⠀⠀⢿⣿⣏⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⢿⣿",
		"⣿⣿⣿⣿⣯⣿⣬⣭⣽⢫⣿⣿⣿⣿⣿⣷⣾⣥⣤⣤⣿⣿⣿⣿⣿⠃⢀⡠⠴⢤⡀⢰⣿⣿⣿⣧⣤⣤⣄⠀⣠⣴⣦⣤⣬⣿⣿⣿⣿⡇⢠⣄⠀⡄⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣯⣿⣿⣿⣿⣿⣿⣿⣿⣤⣼⣿⣿",
		"⣿⣿⣿⣯⣾⣿⣿⡿⣳⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⢸⡄⠀⠀⡿⢸⣿⣿⣿⠻⣻⡟⠃⠀⠛⢛⢿⣿⠟⢹⣿⣿⣿⣧⠸⡟⢦⣧⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠉⠉⠀⠀⠀⠀⠀⠈⠉⠉⠉",
		"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣯⣹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡶⠀⠉⠛⠉⠁⣿⣿⣿⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⣿⣿⡞⠃⠀⠛⠀⣸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⡿⠁⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀",
		"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⠂⠀⠀⠀⠀⢸⣿⣿⣿⣧⠀⠀⣲⣴⣶⡀⠀⠀⣾⣿⣯⣿⣿⣿⠀⠀⠀⠀⢀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠁⠀⠀⠀⠀⠀⠔⠒⠀⠀⠀⠀⠀",
		"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣟⠛⢿⣿⣿⣿⣿⣿⣆⠄⠀⠀⠀⠀⢻⣿⣿⣿⣤⡿⠟⣛⡻⠿⣧⣼⣿⣿⣿⣿⣿⡟⠀⠀⠀⠐⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡻⠁⠀⠀⠀⠀⠀⠖⡂⠀⢐⠂⠀⠀⢐",
		"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣄⡈⠉⠛⠻⠿⠿⣎⢀⣀⠀⠀⠀⣿⣿⣿⣿⣷⣴⣿⣷⣴⣿⣿⣿⣿⣿⣿⣿⡄⠀⠀⢀⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠁⠀⠀⣀⠀⠀⠀⠀⠀⢬⡑⠀⠀⣰⡓",
		"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣄⠀⢰⣶⣶⣶⣾⣿⣶⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⣿⣿⣿⣿⣿⡤⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠁⠀⠀⢀⠀⠀⠐⠂⢀⠪⠭⠀⠀⣰⣿⠃",
		"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣆⠀⠹⣿⣿⣿⣿⣿⣿⡿⠿⠟⠈⢿⣿⢿⣿⣿⠟⠀⠘⠉⢻⣿⣿⣿⣿⣿⣿⣿⡿⠿⠿⣿⠿⠿⣿⣿⣿⡇⠀⠀⠐⠀⠀⠀⠀⠀⡘⠁⠀⠠⣰⠇⣳⣾",
		"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡏⠀⠀⢸⣿⣿⣿⣿⣿⣿⣆⣤⣀⣙⠃⠀⠉⠛⠁⠀⠀⢀⣾⣿⣿⣿⣿⣿⣿⡏⠁⢀⠀⠀⠀⠀⡞⠀⠈⠁⠀⠀⠀⠀⠀⠀⠀⣠⠼⠃⠀⣴⣃⣸⣿⣾",
		"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠁⠀⢰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣿⣶⣾⣷⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⢸⡘⣦⡀⠀⠈⠀⠐⠀⠀⠀⠀⠀⠀⠄⠀⠀⠀⠉⢀⣾⣿⣿⣯⣸⣿",
		"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣏⠀⠀⣸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠏⡹⢻⣿⠿⣿⡀⣿⣿⠀⠑⠀⠃⠀⠠⠀⠠⡀⠣⠀⠀⡀⠀⠄⠀⠀⠀⠀⣠⡏⢟⢻⣿⣿⣿",
		"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⢀⡤⠟⣡⠞⢻⣿⣟⠁⠀⠀⠀⠀⠈⠁⠸⡔⠀⠀⢔⡀⠄⠡⡰⡄⠄⠀⠀⢸⣧⣿⠿⣿⣿⣿",
		"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣯⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡯⠖⠀⣰⠟⠁⢠⣾⡋⠀⠀⠀⠀⢀⠂⠁⠈⠒⢀⢊⠀⠀⡈⡄⡈⠂⠀⣠⡷⢛⡽⢿⡓⠿⣟⠉⢉",
		"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠈⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⠉⠀⢀⣾⠋⠀⠀⣿⡿⠃⠀⠀⠰⣤⠀⠒⠈⠀⠀⠀⠀⡘⢇⠌⠀⠀⢠⣾⡯⣤⣿⣌⡲⣮⣽⣿⣧⣾",
		"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠋⠁⠀⠀⢀⡼⠃⠀⢀⣾⠏⠀⢠⠀⡄⠀⠡⣦⠀⠀⠂⢠⡰⣝⠎⠀⠀⢀⣴⣿⣿⣿⡟⣠⣿⠹⣮⣿⣿⣿⣿",
		"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⢻⣿⣿⣿⣿⣿⣿⣿⣿⠿⠋⠀⠀⠀⠀⣰⡟⣱⠀⣠⣿⣿⣿⣦⣼⣧⠈⢆⠀⠈⢀⢦⣉⡀⠁⠀⠀⢀⣴⣿⣿⣿⣿⣿⣸⣿⣿⣿⣿⣿⣿⣿⣿",
		"⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡀⠀⢸⣿⣿⣿⣿⡿⠟⠋⠁⠀⠀⠀⠀⣠⣾⡿⠖⠀⣠⣿⣿⠋⢀⣰⣿⣿⣷⣀⠣⠀⠈⠓⢁⠀⠀⢁⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
	},

	{
		"⠀⠀⠀⠀⡶⠆⠖⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⣠⣤⣀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢬⡅⢡⠀⠀⠀⠀",
		"⠀⠀⠀⠀⢀⡀⢀⢀⠀⠀⠀⠀⠀⠀⢀⣴⣿⣿⣯⣙⣻⡛⢹⣿⣶⡄⠀⠀⠀⠀⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠛⠈⢋⢛⠛⠓⠀⠀⠀⠀⢀⣿⠿⢏⠃⢀⠩⠿⠿⠯⠭⢿⣿⡄⠀⠀⠀⠀⠀⠘⠙⠚⠈⠐⠀⠀⠐",
		"⠀⠀⠶⡀⠀⠈⠈⠀⠀⠀⠀⠀⠀⣸⡿⣷⠜⣪⡴⠞⣛⠛⠻⢷⡜⢾⣇⠀⠀⠀⠀⠀⠀⠛⠓⠀⠀⠀⡀⠀",
		"⠀⠀⢸⣕⠄⠀⢀⣤⡄⠀⠀⠀⠀⣿⣏⢕⡽⠋⠀⠐⢶⣿⣷⣀⠙⡮⡏⠀⠀⠀⡄⠀⠀⠀⠀⠀⠀⣸⡇⠀",
		"⠀⠀⠀⠻⣄⣄⡼⠙⠋⠀⠀⠀⠀⣿⡧⣿⡀⠀⠀⠀⠀⢀⣮⠻⣿⣇⠃⠀⠀⠤⠗⠃⣠⣤⡄⠀⠀⣼⠃⠀",
		"⠀⠀⠀⠀⠼⣖⢜⢰⣄⠀⠀⠀⠀⣿⢱⣿⠃⠀⠀⢀⡀⣿⠃⣰⠿⠈⠀⠀⠀⠀⢨⡄⠙⢫⡳⣤⡾⠁⠀⠀",
		"⠀⠀⠀⢼⠢⠙⣶⡛⡈⠇⠀⠀⠀⣇⢻⣿⠀⠢⣀⠀⢈⣥⡾⠃⠀⠀⠀⠀⠀⠀⠈⣷⣇⡹⡸⢁⡂⠀⠀⠀",
		"⠀⠀⢠⣀⡀⠐⠃⠒⠓⠃⠀⣠⣴⢿⣧⢻⠀⠀⠈⠉⠘⠏⠀⣴⢟⡹⠓⡄⠄⠀⠀⡉⠉⠹⣁⢎⣼⡄⠀⠀",
		"⠀⠀⠀⠀⠀⠈⠀⠀⣠⣴⣿⣛⠋⢸⢻⣆⠆⠤⠀⡀⠸⠀⢸⣖⣇⢠⣴⢿⡄⠀⠀⠟⠀⠁⢡⢊⡛⣷⠀⢠",
		"⠀⠀⠀⠀⠀⠀⣠⣾⣟⠑⣶⣬⠉⠈⣎⠃⠚⣿⣍⢹⣿⢆⠀⠻⢿⡄⢀⣈⢇⠀⠀⠀⠀⠀⡄⢠⣀⠈⠀⠸",
		"⠀⠀⠀⠀⢠⣾⢛⠹⢿⡛⢮⢻⣦⡀⢋⣢⠘⢙⢿⣿⢏⣾⣷⡄⣀⠚⡀⢀⠌⠑⠉⠢⡀⠀⠁⠈⠀⠀⠀⠘",
		"⠀⠀⠀⠀⣿⡟⣷⣶⣄⠱⣌⣰⣝⢿⣌⢣⣵⣿⣦⣽⣾⣿⣿⡷⣏⡆⣥⠡⢪⠁⠀⠀⠱⡄⠀⠀⠀⠀⠀⢀",
		"⠀⠀⠀⢠⣿⡇⣿⣿⣿⣶⠈⢻⡛⣿⣻⣷⣿⣿⣿⣿⠞⢛⢛⣽⣿⣁⢠⡗⠁⠀⠠⢒⠡⡘⡄⠀⠀⠀⠀⠀",
		"⠀⠀⠀⢸⣿⡇⢸⣿⣿⣿⣷⣽⣽⣎⢿⣿⣿⣯⠪⠽⠗⠑⣿⣿⡍⣧⠈⠁⢀⢆⠤⣔⣭⡱⢻⠀⠀⠀⠀⢸",
		"⠀⠀⠀⢸⣿⡇⠘⢿⣿⣿⣿⣿⣮⣻⣷⣿⣿⠃⠀⠀⠀⣴⡞⢭⡧⣐⠁⢐⠡⣪⢐⠠⠄⣒⣜⡇⠀⠀⠀⢠",
		"⠀⠀⠀⢸⣿⡇⢀⣉⣙⡛⢿⣿⣿⣿⣿⣏⠁⢄⣀⣴⣿⠫⠂⠉⠁⠀⠀⠀⠀⠐⣿⣷⣤⡈⢷⢇⠀⠀⠀⠘",
		"⡀⠀⠀⢸⣿⠟⣊⣿⣿⣿⣶⡞⣩⢸⢾⣿⣦⣤⣿⠿⣡⠃⠀⠀⢀⠠⡄⣀⣀⣀⣸⣿⡵⠋⣠⣿⠀⠀⠀⠀",
		"⠇⠀⠀⢸⣡⣾⣿⣿⠟⡛⣿⣇⣿⢸⣄⣙⣿⣿⣏⣘⠇⠀⠀⡆⡌⠷⡀⢀⠔⢉⠋⡘⣿⣿⣯⣿⡄⠀⠀⠀",
		"⠀⠀⠀⠈⣿⣿⣫⣶⣿⡁⣸⣿⣿⢸⣿⢿⣿⣿⡌⡜⠀⠀⣸⡟⠀⡠⠁⠎⠠⡖⣤⢡⣟⣾⣿⣿⡇⠀⠀⠀",
		"⠆⠀⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⢸⣿⣾⣿⣿⣴⠅⣤⢠⢋⡙⢄⡁⢸⢴⣯⣾⣿⣿⣾⢯⣿⣿⡇⠀⠀⠀",
		"⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⢸⣿⣿⣿⡿⠁⣸⣤⣀⣀⣽⡆⠄⢎⣿⣿⣿⣿⡿⣝⢿⣿⣿⡇⠀⠀⠀",
	},

	{
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠠⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠄⠀⠀⠀⠀⢀⣤⣶⣶⣾⠷⣶⣶⣤⡀⠀⠀⠀⠈⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠊⠀⠀⠀⢀⣾⣿⣿⣿⣿⣷⣶⣾⣿⣿⣿⣆⠀⠀⠀⠀⢁⠀⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⡐⠀⠀⠀⢀⣾⣿⣿⡳⢛⣊⣤⡦⣭⣭⣭⠿⣿⡆⠀⠀⠀⠀⠂⠀⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠁⠀⠀⠀⢨⣿⡿⠴⣷⡿⣭⢤⣤⡈⠙⢺⣧⣝⣧⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀",
		"⢠⣡⠉⡅⠀⠀⠀⡀⠀⠀⠀⢸⡟⣱⡾⣯⠁⠈⠛⠚⠻⣹⣿⢾⡇⡇⠀⠀⠀⠀⠀⠀⠀⠀⠠⠄⢆⠄",
		"⠘⠀⠀⠁⠀⠀⠀⠡⠀⠀⠀⠸⡷⢽⣿⣚⡄⠀⠀⢠⢣⠁⣼⡿⣿⠀⠀⠈⢀⢠⠌⢐⠀⠀⠡⠃⠈⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⢄⠀⠀⠘⢱⣿⣿⢯⣶⡐⠲⣘⣯⣼⣿⡣⠁⢀⠀⣴⣶⣿⣶⣆⠀⠐⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠐⡃⠀⠀⠀⠂⠀⢈⣧⡻⣿⠂⠳⣳⣤⡼⣿⡱⡎⠀⠀⠀⢰⣇⣀⢸⣿⣿⠆⠄⡄⠀⠀⠀",
		"⠈⠐⠈⠁⠘⠀⠙⠑⠘⠀⢀⣦⣿⣧⣻⠁⠀⠀⢨⣟⣿⣹⡇⠀⠠⠀⢧⠎⠉⡽⡻⠏⠀⢀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⣀⣴⣾⣿⣿⣿⣿⣎⢥⠬⠀⣥⠺⡟⣿⣿⣦⣄⠐⢈⡖⠋⢩⣅⡀⠀⢰⠒⠀⡖⡂",
		"⠀⠀⠀⠀⠀⣀⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⡸⣿⣶⣿⣹⣿⢿⣿⠏⠶⣏⠹⣀⡏⠸⡸⢆⠈⠈⠀⠁⠁",
		"⠀⠀⠀⠀⣼⣿⣿⣿⣿⣪⣾⣿⣿⣿⣿⣿⣿⢾⡹⡿⣿⣿⣿⢣⠨⠀⠐⠀⠀⣘⢔⠥⢙⡆⠀⠀⠀⠀",
		"⠀⠀⠀⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣤⣙⠂⠻⠧⠀⠃⠀⠀⢀⣼⠤⣋⠴⢡⠀⠀⠀⠀⠀",
		"⠀⠀⢠⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⡁⠁⡀⢁⣂⡩⠀⢫⢻⣥⣹⠈⡜⠀⠀⠀⠀⠀",
		"⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢿⣿⣿⣿⡟⡿⣿⣷⣤⣤⡧⠖⣒⣚⢢⠿⢮⡉⡝⡼⡁⠀⠀⠀⠀",
		"⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣼⣿⡿⣫⢞⣿⣿⣿⣿⡿⣘⣼⢳⠤⢼⢚⡌⢳⡩⡳⠁⠀⠀⠀⠀",
		"⠀⠀⢸⡿⣛⣛⣏⣍⣩⠍⣿⣿⠐⠉⠀⢺⣴⣿⡿⠛⢫⢖⡳⠭⡆⣊⡓⢚⣢⢙⢖⠽⢆⠀⠀⠀⠀⠀",
		"⠀⠀⢿⣶⣿⣻⣿⣿⣿⣽⣮⡃⢄⣨⣶⣿⡟⠁⡀⢦⡁⡮⠵⣻⠖⠁⢀⢈⠢⢜⡤⣻⣨⣄⠀⠀⠀⠀",
		"⠀⠀⠸⣿⣿⣼⣿⣿⣿⡇⣹⣷⣻⣿⣿⣿⣩⠥⠜⣶⠹⣨⢳⢏⣄⣀⡞⣱⢓⣓⡿⢻⡿⣿⡆⠀⠀⠀",
		"⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣵⣾⣿⣿⣿⣿⠰⢛⣼⢲⢛⣵⠃⠌⢌⣨⠜⣭⢏⠖⡀⠢⡟⣿⡇⠀⠀⠀",
		"⠀⠀⢸⣿⣿⣿⣿⣿⣷⣿⣿⣿⣿⣿⣿⡇⣒⣻⢜⡵⡽⠤⡳⢭⢣⣳⠛⣒⣮⣽⣶⣾⣽⣿⣷⠀⠀⠀",
		"⠀⠀⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠙⠉⠛⠉⠋⠉⠋⠙⠉⠉⠃⠙⠙⠉⠓⠒⠋⠃⠀⠀⠀",
	},

	{
		"⠀⠀⠀⠀⠀⠀⠀⠙⡇⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⡘⢰⡇⠀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⢀⡡⠚⠒⠒⢒⣻⠇⠀⠀",
		"⠀⠀⠀⣀⠔⠉⠀⡴⠶⠚⠋⠁⠀⠀⠀",
		"⠀⠀⠎⠀⣤⣼⣿⣇⢀⣀⠀⠀⠀⠀⠀",
		"⠀⢰⣃⡠⠿⠞⠋⢁⣬⠟⣠⢤⠀⠀⠀",
		"⠀⣰⢋⡔⠁⢀⣴⣁⡀⠉⡛⢿⡆⠀⠀",
		"⢐⢃⠊⠁⢠⣾⣿⣿⣇⠉⢿⡇⢱⠀⠀",
		"⠸⠞⠂⣀⣞⣿⣻⣿⡿⣆⢸⡋⠈⣇⠀",
		"⢨⠀⠴⠼⣧⢘⢗⣪⣿⠟⣽⠙⠄⣻⡀",
		"⠘⣅⠀⠜⠜⢷⡇⢻⣿⡀⠉⠇⢤⣚⡇",
		"⠀⠹⣃⡀⠀⠡⣿⣶⣼⡆⠀⡀⢸⣾⡇",
		"⠀⠀⢻⣓⣀⠀⢰⣿⣿⣦⢵⠀⢿⡿⠀",
		"⠀⠀⠀⢻⣫⣄⠈⢹⣿⣧⣭⡣⣿⠇⠀",
		"⠀⠀⠀⠀⢻⣶⣿⣿⣿⣿⣧⣷⠋⠀⠀",
		"⠀⢀⣀⡴⣿⣿⣏⣽⣿⣿⣿⣧⠀⠀⠀",
		"⠴⢽⣿⠞⠗⠩⣿⣿⣿⣿⣟⠏⠀⠀⠀",
		"⠀⠀⠑⠉⡘⠤⠈⣻⣿⣿⡟⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠑⠨⠿⠿⠿⠀⠀⠀⠀⠀",
	},

	{
		"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠖⠦⡀⠀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⣮⠠⠈⣧⡀⠐⢀⠀⠀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⣿⠗⡌⡐⠛⡂⢀⠣⡀⠀⠀",
		"⠀⠀⠀⠀⠀⠀⠀⠀⠯⡹⣇⠁⠐⠈⢠⠀⢲⠀⠀",
		"⠀⠀⠀⠀⠀⣀⠀⢸⢰⢸⣿⣄⠀⠀⢈⡇⠀⠃⠀",
		"⠀⠀⠀⢠⠊⠀⠀⢼⣷⡈⢏⣿⣧⠀⠑⢻⠀⠘⠀",
		"⠀⢀⣠⠾⣦⠀⠀⠈⣟⢹⣿⣿⣧⠀⠀⠀⣷⠀⡇",
		"⢠⣾⠀⠀⠘⣷⠀⠀⠹⣷⣺⣿⢿⣣⠄⠀⠘⣇⠀",
		"⣞⢭⣦⡀⣀⠘⡄⢀⠞⣿⣟⠻⠈⠛⠓⠀⠀⠹⡇",
		"⢸⠆⣸⣧⡀⠠⣹⣜⠄⣹⡷⠀⠀⠀⠀⠀⠀⢸⡇",
		"⢸⡄⠀⠉⠳⢤⡼⣿⣿⣟⠕⠀⠀⠀⠀⠀⠀⠘⡇",
		"⢈⡇⠀⠀⠀⠀⠀⠜⢹⣿⠃⠀⠀⠀⠀⠀⠀⢠⠇",
		"⠈⣇⠀⠀⠀⠀⠀⠄⢻⣿⣾⡀⠀⠀⠀⠀⠀⢸⠀",
		"⠀⢹⢿⠀⠀⠀⠀⠀⠀⢿⣯⣗⠤⡠⠤⠠⢠⡏⠀",
		"⠀⠀⢷⡛⠂⢠⠀⠄⠀⢠⢼⣿⣖⣿⢴⣔⡽⠀⠀",
		"⠀⠀⠸⡷⠘⢒⠃⠀⠀⢈⠆⡿⡹⠞⠂⡞⠁⠀⠀",
		"⠀⠀⢠⣏⠌⠓⠖⠀⠀⠌⠈⠀⠁⠠⢀⠷⡄⠀⠀",
		"⠀⠀⣯⣟⣣⣀⠆⠀⠀⣀⣀⢀⠠⢐⣽⠂⠃⠀⠀",
		"⠀⠀⣷⣿⠿⣿⠽⣩⠍⡁⣀⠀⠀⠰⠙⡄⢸⠀⠀",
		"⠀⢰⢫⡞⢩⢟⡩⠟⠉⠂⠐⢞⢢⠒⠁⠁⢸⡄⠀",
	},
}

-- local prayers = {
-- 	{
-- 		"Santo Deus, Santo Forte,",
-- 		"     Santo Imortal,",
-- 		"  tem piedade de nós.",
-- 	},
--
-- 	{
-- 		"Jesus Cristo, Filho de Deus,",
-- 		"tem piedade de mim, pecador.",
-- 	},
--
-- 	{
-- 		"Senhor, tem piedade.",
-- 	},
--
-- 	{
-- 		"Santíssima Mãe de Deus,",
-- 		"      salva-nos!",
-- 	},
--
-- 	{
-- 		"  É digno, em verdade,",
-- 		"      bendizer-te,",
-- 		"ó sempre bem-aventurada",
-- 		"    e toda-imaculada",
-- 		    Mãe do nosso Deus.",
-- 	},
-- }

local prayers = {
	{
		"Santo Deus, Santo Forte, Santo Imortal, tem piedade de nós.",
	},

	{
		"Jesus Cristo, Filho de Deus, tem piedade de mim, pecador.",
	},

	{
		"Senhor, tem piedade.",
	},

	{
		"Santíssima Mãe de Deus, salva-nos!",
	},

	{
		"  Mais honrada que os Querubins, e incomparavelmente mais gloriosa que os Sefarins,",
		"verdadeiramente deste luz ao Deus Verbo. Verdadeira Mãe de Deus, nós te magnificamos.",
	},

	{
		"É digno, em verdade, bendizer-te, ó sempre bem-aventurada e toda-imaculada Mãe do nosso Deus.",
	},
}

-- http://lua-users.org/wiki/MathLibraryTutorial
math.randomseed(os.time())
math.random()
math.random()
math.random()

local icon_index = math.random(#icons)
local prayer_index = math.random(#prayers)

-- local dashboard_header = {}
--
-- for i = 1, #icons[icon_index] do
-- 	table.insert(dashboard_header, icons[icon_index][i])
-- end
--
-- table.insert(dashboard_header, "")
--
-- for i = 1, #prayers[prayer_index] do
-- 	table.insert(dashboard_header, prayers[prayer_index][i])
-- end

return {
	{
		"goolord/alpha-nvim",
		opts = function(_, opts)
			opts.section.header.val = icons[icon_index]
			opts.config.layout[1].val = 2
			opts.config.layout[3].val = 3
		end,
		config = function(_, opts)
			require("alpha").setup(opts.config)

			vim.api.nvim_create_autocmd("User", {
				once = true,
				callback = function()
					table.insert(prayers[prayer_index], 1, "")
					opts.section.footer.val = prayers[prayer_index]
					pcall(vim.cmd.AlphaRedraw)
				end,
			})
		end,
	},
	-- TODO: find out how to center text below dashboard (prayers) independently
	-- {
	-- 	"goolord/alpha-nvim",
	-- 	requires = { "nvim-tree/nvim-web-devicons" },
	-- 	config = function()
	-- 		local alpha = require("alpha")
	-- 		local dashboard = require("alpha.themes.dashboard")
	--
	-- 		-- dashboard.section.header.opts.position.val = "left"
	--
	-- 		dashboard.section.buttons.val = {
	-- 			dashboard.button("e", "  New file", ":ene <BAR> startinsert <CR>"),
	-- 			dashboard.button("q", "  Quit NVIM", ":qa<CR>"),
	-- 		}
	--
	-- 		table.insert(dashboard.section.buttons.entries,
	-- 			dashboard.button("f", "F  Quit NVIM", ":qa<CR>"),
	-- 		)
	--
	-- 		alpha.setup(dashboard.config)
	-- 	end,
	-- },
}
